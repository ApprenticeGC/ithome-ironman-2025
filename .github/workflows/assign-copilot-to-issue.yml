name: Assign Copilot to Issue

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: Issue number (e.g., 5)
        required: true

permissions:
  contents: read
  issues: write

jobs:
  assign:
    environment: copilot
    runs-on: ubuntu-latest
    steps:
      - name: Select token (prefer AUTO_APPROVE_TOKEN)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AUTO_APPROVE_TOKEN: ${{ secrets.AUTO_APPROVE_TOKEN }}
        run: |
          if [ -n "${AUTO_APPROVE_TOKEN:-}" ]; then
            echo "GH_TOKEN=$AUTO_APPROVE_TOKEN" >> $GITHUB_ENV
            echo "Using AUTO_APPROVE_TOKEN"
          else
            echo "GH_TOKEN=$GITHUB_TOKEN" >> $GITHUB_ENV
            echo "Using GITHUB_TOKEN"
          fi
          # Enforce PAT usage as required
          if [ -z "${AUTO_APPROVE_TOKEN:-}" ]; then
            echo "ERROR: AUTO_APPROVE_TOKEN (PAT) is required for assignment. Configure it in repo or environment 'copilot'." >&2
            exit 1
          fi

      - name: Acquire RFC series lock
        env:
          GH_TOKEN: ${{ secrets.AUTO_APPROVE_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          OWNER=${{ github.repository_owner }}
          REPO_NAME=${{ github.event.repository.name }}
          python3 scripts/python/production/rfc_assignment_mutex.py \
            --owner "$OWNER" \
            --repo "$REPO_NAME" \
            --issue-number ${{ github.event.inputs.issue_number }}
      - name: Assign issue to Copilot
        env:
          GH_TOKEN: ${{ secrets.AUTO_APPROVE_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          OWNER=${{ github.repository_owner }}
          REPO_NAME=${{ github.event.repository.name }}
          python3 scripts/python/production/assign_issue_to_copilot.py \
            --owner "$OWNER" \
            --repo "$REPO_NAME" \
            --issue-number ${{ github.event.inputs.issue_number }} \
            --assign-mode bot
