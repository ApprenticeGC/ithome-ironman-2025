name: Deploy Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  deploy:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./dotnet

      - name: Build Release
        run: dotnet build ./dotnet -c Release --no-restore

      - name: Test Release
        run: dotnet test ./dotnet -c Release --no-build --verbosity normal

      - name: Create Release Packages
        run: |
          dotnet pack ./dotnet -c Release --no-build -o ./artifacts/packages
          ls -la ./artifacts/packages/

      - name: Generate Release Version
        id: version
        run: |
          # Generate semantic version based on commit count and short SHA
          VERSION="1.0.$(git rev-list --count HEAD)-$(git rev-parse --short HEAD)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION"

      - name: Create GitHub Release
        id: create_release
        run: |
          gh release create v${{ steps.version.outputs.version }} \
            --title "GameConsole Framework v${{ steps.version.outputs.version }}" \
            --notes "## GameConsole Framework Release v${{ steps.version.outputs.version }}
            
          Automated release created from commit ${{ github.sha }}
          
          ### Changes
          - Built from commit: ${{ github.sha }}
          - Build configuration: Release
          - All tests passing âœ…
          
          ### Artifacts
          - NuGet packages included in this release
          - Built with .NET 8.0" \
            --latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        run: |
          for package in ./artifacts/packages/*.nupkg; do
            if [ -f "$package" ]; then
              echo "Uploading $package"
              gh release upload v${{ steps.version.outputs.version }} "$package" --clobber
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deployment Summary
        run: |
          echo "ðŸš€ Deployment completed successfully!"
          echo "ðŸ“¦ Release: v${{ steps.version.outputs.version }}"
          echo "ðŸ”— Release URL: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.version }}"
          echo "ðŸ“‹ Packages created:"
          ls -la ./artifacts/packages/ || echo "No packages found"