name: Auto-Review Copilot PRs

on:
  pull_request:
    types: [review_requested, ready_for_review]
  pull_request_review:
    types: [submitted]

permissions:
  contents: read
  pull-requests: write
  issues: read

jobs:
  auto_review:
    runs-on: ubuntu-latest
    if: >
      (github.event.pull_request.user.login == 'app/copilot-swe-agent' ||
       contains(github.event.pull_request.head.ref, 'copilot/')) &&
      github.event.pull_request.draft == false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auto-approve Copilot PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          echo "ü§ñ Auto-reviewing Copilot PR #$PR_NUMBER"

          # Check if already approved by owner
          EXISTING_REVIEWS=$(gh pr view $PR_NUMBER --json reviews --jq '.reviews[] | select(.author.login == "ApprenticeGC" and .state == "APPROVED")')

          if [ -n "$EXISTING_REVIEWS" ]; then
            echo "‚úÖ PR already approved by owner"

            # Check if there are pending review requests
            PENDING_REQUESTS=$(gh pr view $PR_NUMBER --json reviewRequests --jq '.reviewRequests[]')

            if [ -n "$PENDING_REQUESTS" ]; then
              echo "üîÑ Pending review requests found, submitting approval"
              gh pr review $PR_NUMBER --approve --body "ü§ñ Auto-approved: Copilot PR with completed implementation and owner approval"
            else
              echo "‚úÖ No pending review requests"
            fi
          else
            echo "üîç Checking PR content quality..."

            # Basic content validation
            FILES_CHANGED=$(gh pr view $PR_NUMBER --json files --jq '.files | length')
            PR_TITLE=$(gh pr view $PR_NUMBER --json title --jq -r '.title')

            if [[ $FILES_CHANGED -gt 0 && "$PR_TITLE" =~ RFC-[0-9]+ ]]; then
              echo "‚úÖ PR appears to be substantial RFC implementation"
              gh pr review $PR_NUMBER --approve --body "ü§ñ Auto-approved: RFC implementation PR with valid content"
            else
              echo "‚ö†Ô∏è PR doesn't meet auto-approval criteria"
              gh pr review $PR_NUMBER --comment --body "ü§ñ Auto-review: PR requires manual review (criteria not met)"
            fi
          fi

      - name: Log Review Status
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          echo "üìä Final review status:"
          gh pr view $PR_NUMBER --json reviewDecision,reviews --jq '{reviewDecision, reviewCount: (.reviews | length)}'
