name: Deploy to Staging

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      skip_health_check:
        description: 'Skip health check after deployment'
        required: false
        default: false
        type: boolean

env:
  DOTNET_VERSION: '8.0.x'
  BUILD_CONFIGURATION: 'Release'

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ./dotnet

      - name: Build GameConsole
        run: dotnet build ./dotnet -c ${{ env.BUILD_CONFIGURATION }} --no-restore -warnaserror

      - name: Test before deployment
        run: dotnet test ./dotnet --no-build -c ${{ env.BUILD_CONFIGURATION }} --verbosity minimal

      - name: Publish GameConsole
        run: dotnet publish ./dotnet/GameConsole.Engine.Core/GameConsole.Engine.Core.csproj -c ${{ env.BUILD_CONFIGURATION }} --no-build -o ./publish

      - name: Create deployment package
        run: |
          cd ./publish
          tar -czf ../gameconsole-staging-${{ github.sha }}.tar.gz .
          cd ..

      - name: Upload deployment artifact
        uses: actions/upload-artifact@v4
        with:
          name: gameconsole-staging-${{ github.sha }}
          path: gameconsole-staging-${{ github.sha }}.tar.gz
          retention-days: 7

      - name: Deploy to staging
        env:
          DEPLOYMENT_PACKAGE: gameconsole-staging-${{ github.sha }}.tar.gz
        run: |
          echo "🚀 Deploying GameConsole to staging environment"
          echo "📦 Package: $DEPLOYMENT_PACKAGE"
          echo "🏷️  Commit: ${{ github.sha }}"
          
          # Simulate deployment process
          echo "📋 Deployment started at $(date)"
          echo "✅ Package validated"
          echo "⬆️  Uploading to staging"
          sleep 2
          echo "🔄 Restarting services"
          sleep 1
          echo "✅ Staging deployment completed successfully"

      - name: Health check
        if: ${{ !github.event.inputs.skip_health_check }}
        run: |
          echo "🏥 Running health checks for staging environment"
          sleep 1
          echo "✅ Application is healthy"
          echo "✅ All services responding"
          echo "✅ Health check passed"

      - name: Deployment notification
        run: |
          echo "📢 Staging Deployment Notification"
          echo "Environment: staging"
          echo "Commit: ${{ github.sha }}"
          echo "Status: ✅ SUCCESS"
          echo "Time: $(date)"
          echo "🔗 Ready for production deployment"